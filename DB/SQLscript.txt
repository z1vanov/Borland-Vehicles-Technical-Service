CREATE DATABASE "C:\Users\ThePessimistt\Desktop\diplomna\SERVICE.gdb"
             user "SYSDBA"
         password "masterkey"
         page_size=4096;
CREATE TABLE OWNER 
(
  ID INT NOT NULL,
  NAME VARCHAR(64) ,
  PHONE_NUMBER DECIMAL(12) ,
  ADDRESS VARCHAR(256),
  E_MAIL VARCHAR(64) ,
  MOL VARCHAR(64) ,
  BUL_EGN VARCHAR(12) NOT NULL,
  PRIMARY KEY (ID)
);
CREATE TABLE BRAND
(
  ID INT NOT NULL,
  NAME VARCHAR(32) ,
  PRIMARY KEY (ID)
);
CREATE TABLE TYPE_VEHICLE
(
  ID INT NOT NULL,
  NAME VARCHAR(32) ,
  PRIMARY KEY (ID)
);
CREATE TABLE ENGINE_TYPE
(
  ID INT NOT NULL,
  NAME VARCHAR(32) ,
  PRIMARY KEY (ID)
);
CREATE TABLE CATEGORY
(
  ID INT NOT NULL,
  NAME VARCHAR(32) ,
  PRIMARY KEY (ID)
);
CREATE TABLE VEHICLE_NOMENCLATURE (
  ID INT NOT NULL,
  BRAND_ID INT,
  MODEL VARCHAR(64) ,
  CATEGORY_ID INT,
  ENGINE_TYPE_ID INT,
  TYPE_VEHICLE_ID INT,
  ENGINE_VOLUME DECIMAL(4,1),
  LOADABILITY VARCHAR(32),
  AXLES_NUMBER INT,
  SEATS_NUMBER INT,
  PRIMARY KEY (ID),
    FOREIGN KEY (BRAND_ID) REFERENCES BRAND(ID),
    FOREIGN KEY (TYPE_VEHICLE_ID) REFERENCES TYPE_VEHICLE (ID),
    FOREIGN KEY (ENGINE_TYPE_ID) REFERENCES ENGINE_TYPE (ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (ID)
);
CREATE TABLE VEHICLE
(
  ID INT NOT NULL,
  PRODUCTION_YEAR DATE,
  OWNER_ID INT NOT NULL,
  VEHICLE_NOMENCLATURE_ID INT,
  REGISTRATION_NUMBER VARCHAR(16),
  CHASSIS_NUMBER VARCHAR(64) ,
  FRAME_NUMBER VARCHAR(64) ,
  REGISTRATION_DATE DATE,
  PRIMARY KEY (ID),
    FOREIGN KEY (OWNER_ID) REFERENCES OWNER(ID),
    FOREIGN KEY (VEHICLE_NOMENCLATURE_ID) REFERENCES VEHICLE_NOMENCLATURE(ID)
);
CREATE TABLE REPAIR_SHOP
(
  ID INT NOT NULL,
  NAME VARCHAR(128),
  ADDRESS VARCHAR(256),
  PRIMARY KEY (ID)
);
CREATE TABLE POSSITION
(
  ID INT NOT NULL,
  NAME VARCHAR(64),
  PRIMARY KEY (ID)
);
CREATE TABLE EMPLOYEE
(
  ID INT NOT NULL,
  FIRST_NAME VARCHAR(32),
  FAM_NAME VARCHAR(32),
  PHONE_NUMBER DECIMAL(12),
  SERVICE_PHONE_NUMBER VARCHAR(12),
  E_MAIL VARCHAR(64),
  POSSITION_ID INT,
  USER_PASSWORD VARCHAR(32),
  USERNAME VARCHAR(32),
  PRIMARY KEY (ID),
    FOREIGN KEY (POSSITION_ID) REFERENCES POSSITION(ID)
);
CREATE TABLE REPAIR
(
  ID INT NOT NULL,
  ACCPETANCE_DATE DATE ,
  COMPLETION_DATE DATE ,
  EMPLOYEE_ID INT ,
  REPAIR_SHOP_ID INT ,
  VEHICLE_ID INT ,
  ACCEPTED_THE_VEHICLE VARCHAR(128),
  NOTE VARCHAR(256),
  PRIMARY KEY (ID),
    FOREIGN KEY (REPAIR_SHOP_ID) REFERENCES REPAIR_SHOP(ID),
    FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE(ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID)
);
CREATE TABLE SERVICE
(
  ID INT NOT NULL,
  NAME VARCHAR(128),
  PRIMARY KEY (ID)
);
CREATE TABLE REPAIR_SERVICE
(
  ID INT NOT NULL,
  REPAIR_ID INT,
  SERVICE_ID INT,
  TOTAL_PRICE DECIMAL(16,2),
  PRIMARY KEY (ID),
    FOREIGN KEY (REPAIR_ID) REFERENCES REPAIR(ID),
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(ID)
);
CREATE TABLE MEASURE (
  ID INT NOT NULL,
  NAME VARCHAR(64),
  ABBREVIATION VARCHAR(16) ,
  PRIMARY KEY (ID)
);
CREATE TABLE MANUFACTURER
(
  ID INT NOT NULL,
  NAME VARCHAR(64),
  PRIMARY KEY (ID)
);
CREATE TABLE ITEM_NOMENCLATURE
(
  ID INT NOT NULL,
  NAME VARCHAR(64),
  MANUFACTURER_ID INT,
  MEASURE_ID INT,
  PRIMARY KEY (ID),
    FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE(ID),
    FOREIGN KEY (MANUFACTURER_ID) REFERENCES MANUFACTURER(ID)
);
CREATE TABLE ITEM
(
  ID INT NOT NULL,
  PRICE DECIMAL(16,2),
  QUANTITY DECIMAL(8,2),
  ITEM_NOMENCLATURE_ID INT,
  SERVICE_ID INT,
  PRIMARY KEY (ID),
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(ID),
    FOREIGN KEY (ITEM_NOMENCLATURE_ID) REFERENCES ITEM_NOMENCLATURE(ID)
)

--------------------------------------------------------------------------------------------
INDEXES


CREATE INDEX EMPLOYEETBLFNNDX ON EMPLOYEE(FIRST_NAME);
CREATE INDEX EMPLOYEETBLFAMNNDX ON EMPLOYEE(FAM_NAME);
CREATE INDEX EMPLOYEETBLPNNDX ON EMPLOYEE(PHONE_NUMBER);
CREATE INDEX EMPLOYEETBLSPNNDX ON EMPLOYEE(SERVICE_PHONE_NUMBER);
CREATE INDEX EMPLOYEETBLEMNDX ON EMPLOYEE(E_MAIL);

CREATE INDEX OWNENAMERNDX ON OWNER(NAME);
CREATE INDEX OWNERPNNDX ON OWNER(PHONE_NUMBER);
CREATE INDEX OWNERADDNDX ON OWNER(ADDRESS);
CREATE INDEX OWNEREMNDX ON OWNER(E_MAIL);
CREATE INDEX OWNERMOLNDX ON OWNER(MOL);
CREATE INDEX OWNERBENDX ON OWNER(BUL_EGN);

CREATE INDEX ITEMNOMTBLNAMENDX ON ITEM_NOMENCLATURE(NAME);
CREATE INDEX SERVICETBLNAMENDX ON SERVICE(NAME);

CREATE INDEX VEHICLERDNDX ON VEHICLE(REGISTRATION_NUMBER);
CREATE INDEX VEHICLEPYNDX ON VEHICLE(PRODUCTION_YEAR);
CREATE INDEX VEHICLECNNDX ON VEHICLE(CHASSIS_NUMBER);
CREATE INDEX VEHICLEFNNDX ON VEHICLE(FRAME_NUMBER);
CREATE INDEX VEHICLERDATENDX ON VEHICLE(REGISTRATION_DATE);

CREATE INDEX VEHNOMMODELNDX ON VEHICLE_NOMENCLATURE(MODEL);
CREATE INDEX VEHNOMENGINEVOLNDX ON VEHICLE_NOMENCLATURE(ENGINE_VOLUME);
CREATE INDEX VEHNOMLOADNDX ON VEHICLE_NOMENCLATURE(LOADABILITY);
CREATE INDEX VEHNOMAXLESNDX ON VEHICLE_NOMENCLATURE(AXLES_NUMBER);
CREATE INDEX VEHNOMSEATSNDX ON VEHICLE_NOMENCLATURE(SEATS_NUMBER);

CREATE INDEX RSHOPNAMENDX ON REPAIR_SHOP(NAME);

CREATE INDEX ITEMNAMENDX ON ITEM_NOMENCLATURE(NAME);

--------------------------------------------------------------------------------------------------------------------------------------------
GENERATORS AND STORED PROCEDURES


CREATE GENERATOR VEHICLETBL_IDGEN;
SET GENERATOR VEHICLETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE VEHICLETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(VEHICLETBL_IDGEN,1);
END^
------------------

CREATE GENERATOR REPAIRTBL_IDGEN;
SET GENERATOR REPAIRTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE REPAIRTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(REPAIRTBL_IDGEN,1);
END^
--------------------

CREATE GENERATOR RSHOPTBL_IDGEN;
SET GENERATOR RSHOPTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE RSHOPTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(RSHOPTBL_IDGEN,1);
END^
---------------------

CREATE GENERATOR SERVICETBL_IDGEN;
SET GENERATOR SERVICETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE SERVICETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(SERVICETBL_IDGEN,1);
END^
--------------------

CREATE GENERATOR REPAIRSERVICETBL_IDGEN;
SET GENERATOR REPAIRSERVICETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE REPAIRSERVICETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(REPAIRSERVICETBL_IDGEN,1);
END^
-----------------------

CREATE GENERATOR EMPLOYEETBL_IDGEN;
SET GENERATOR EMPLOYEETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE EMPLOYEETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(EMPLOYEETBL_IDGEN,1);
END^
---------------------------

CREATE GENERATOR OWNERTBL_IDGEN;
SET GENERATOR OWNERTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE OWNERTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(OWNERTBL_IDGEN,1);
END^
---------------------------

CREATE GENERATOR VEHICLENOMTBL_IDGEN;
SET GENERATOR VEHICLENOMTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE VEHICLENOMTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(VEHICLENOMTBL_IDGEN,1);
END^
----------------------------

CREATE GENERATOR POSSITIONTBL_IDGEN;
SET GENERATOR POSSITIONTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE POSSITIONTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(POSSITIONTBL_IDGEN,1);
END^
---------------------------

CREATE GENERATOR CATEGORYTBL_IDGEN;
SET GENERATOR CATEGORYTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE CATEGORYTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(CATEGORYTBL_IDGEN,1);
END^
--------------------------------

CREATE GENERATOR BRANDTBL_IDGEN;
SET GENERATOR BRANDTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE BRANDTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(BRANDTBL_IDGEN,1);
END^
-----------------------------

CREATE GENERATOR ENGINETYPETBL_IDGEN;
SET GENERATOR ENGINETYPETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE ENGINETYPETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ENGINETYPETBL_IDGEN,1);
END^
----------------------------

CREATE GENERATOR ITEMTBL_IDGEN;
SET GENERATOR ITEMTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE ITEMTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ITEMTBL_IDGEN,1);
END^
----------------------------
CREATE GENERATOR ITEMNOMTBL_IDGEN;
SET GENERATOR ITEMNOMTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE ITEMNOMTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ITEMNOMTBL_IDGEN,1);
END^
-------------------

CREATE GENERATOR MESURETBL_IDGEN;
SET GENERATOR MESURETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE MESURETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(MESURETBL_IDGEN,1);
END^
-------------------------

CREATE GENERATOR MANUFACTURERTBL_IDGEN;
SET GENERATOR MANUFACTURERTBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE MANUFACTURERTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(MANUFACTURERTBL_IDGEN,1);
END^
-----------------------------

CREATE GENERATOR VEHICLETYPETBL_IDGEN;
SET GENERATOR VEHICLETYPETBL_IDGEN TO 0;

SET TERM ^;
CREATE PROCEDURE VEHICLETYPETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(VEHICLETYPETBL_IDGEN,1);
END^

------------------------------------------------------------------------------------------------------------
ALTER TABLE


ALTER TABLE "REPAIR" ADD FOREIGN KEY ("VEHICLE_ID") REFERENCES VEHICLE ("ID") ON DELETE CASCADE ON UPDATE CASCADE
ALTER TABLE "REPAIR_SERVICE" ADD FOREIGN KEY ("REPAIR_ID") REFERENCES REPAIR ("ID")  ON DELETE CASCADE ON UPDATE CASCADE

ALTER TABLE "VEHICLE_NOMENCLATURE" ADD FOREIGN KEY ("BRAND_ID") REFERENCES BRAND ("ID")  ON DELETE CASCADE ON UPDATE CASCADE
ALTER TABLE "VEHICLE_NOMENCLATURE" ADD FOREIGN KEY ("TYPE_VEHICLE_ID") REFERENCES TYPE_VEHICLE ("ID")ON UPDATE CASCADE;
ALTER TABLE "VEHICLE_NOMENCLATURE" ADD FOREIGN KEY ("ENGINE_TYPE_ID") REFERENCES ENGINE_TYPE ("ID")ON UPDATE CASCADE;
ALTER TABLE "VEHICLE_NOMENCLATURE" ADD FOREIGN KEY ("CATEGORY_ID") REFERENCES CATEGORY ("ID")ON UPDATE CASCADE;

ALTER TABLE "VEHICLE" ADD FOREIGN KEY ("OWNER_ID") REFERENCES OWNER ("ID")ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE "VEHICLE" ADD FOREIGN KEY ("VEHICLE_NOMENCLATURE_ID") REFERENCES VEHICLE_NOMENCLATURE ("ID")ON DELETE CASCADE ON UPDATE CASCADE;